
package views.Device;

import Exceptions.NullSelectionException;
import controllers.App;
import controllers.DeviceController;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Device;

/**
 *
 * @author petrix
 */
public class DeviceListView extends views.View {

    private DeviceController deviceController;
    private DefaultTableModel dtmDevices;
    
    private final String[] columnNames = {
        "Id", "Nome"
    };
    
    private void createTableModel() {
        this.dtmDevices = (DefaultTableModel) this.tbDeviceList.getModel();
        this.dtmDevices.setColumnIdentifiers(columnNames);
        this.dtmDevices.setRowCount(0);
    }

    public DeviceListView() {
        initComponents();
        ajustScreenCenter();
        deviceController = new DeviceController();
        this.createTableModel();
        this.ListDevices();
    }
    
    public void ListDevices() {
        /**
         * Implementar
         */
//        this.getFilteredCustomers();
//        this.getSortedCustomers();
        for (Device dev : deviceController.getFilteredDevices()) {
            Object[] listData = {dev.getId(), dev.getName()};
            dtmDevices.addRow(listData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbDevice = new javax.swing.JLabel();
        btCreateDevice = new javax.swing.JButton();
        btUpdateDevice = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDeviceList = new javax.swing.JTable();
        lbSort = new javax.swing.JLabel();
        cbSortOptions = new javax.swing.JComboBox<>();
        lbFilter = new javax.swing.JLabel();
        cbFilterOptions = new javax.swing.JComboBox<>();
        tfDeviceName = new javax.swing.JTextField();
        btFilterDevice = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbDevice.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lbDevice.setText("Dispositivos");

        btCreateDevice.setText("Cadastrar");
        btCreateDevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCreateDeviceActionPerformed(evt);
            }
        });

        btUpdateDevice.setText("Editar");
        btUpdateDevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateDeviceActionPerformed(evt);
            }
        });

        tbDeviceList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane1.setViewportView(tbDeviceList);
        if (tbDeviceList.getColumnModel().getColumnCount() > 0) {
            tbDeviceList.getColumnModel().getColumn(0).setPreferredWidth(200);
            tbDeviceList.getColumnModel().getColumn(0).setMaxWidth(200);
        }

        lbSort.setText("Ordenar por:");

        cbSortOptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ordem alfab√©tica" }));

        lbFilter.setText("Filtrar por:");

        cbFilterOptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos" }));

        btFilterDevice.setText("Pesquisar");
        btFilterDevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFilterDeviceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbSort, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbSortOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btCreateDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btUpdateDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(349, 349, 349)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lbFilter)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(cbFilterOptions, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(tfDeviceName, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(btFilterDevice))))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(lbDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lbDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btCreateDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(btUpdateDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbFilter)
                            .addComponent(cbFilterOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btFilterDevice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfDeviceName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSort)
                    .addComponent(cbSortOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCreateDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCreateDeviceActionPerformed
        App.openDeviceCreateView();
    }//GEN-LAST:event_btCreateDeviceActionPerformed

    private void btUpdateDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateDeviceActionPerformed
        try {
            int deviceId = validateSelection(this.tbDeviceList.getSelectedRow());
            deviceController.updateDevice(deviceId);
        } catch (NullSelectionException nullSelectionException) {
            JOptionPane.showMessageDialog(null, nullSelectionException.getMessage());
        }
    }//GEN-LAST:event_btUpdateDeviceActionPerformed

    private void btFilterDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFilterDeviceActionPerformed
//        this.ListCustomers();
    }//GEN-LAST:event_btFilterDeviceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeviceListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeviceListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeviceListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeviceListView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeviceListView().setVisible(true);
            }
        });
    }

    @Override
    public void setTitleScreen() {
        setTitle("Consulta de Dispositivos");
    }

    public int validateSelection(int selectedRow) throws NullSelectionException {
        if (selectedRow == -1) {
            throw new NullSelectionException("Dispositivo");
        }
        return (Integer) this.dtmDevices.getValueAt(this.tbDeviceList.getSelectedRow(), 0);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCreateDevice;
    private javax.swing.JButton btFilterDevice;
    private javax.swing.JButton btUpdateDevice;
    private javax.swing.JComboBox<String> cbFilterOptions;
    private javax.swing.JComboBox<String> cbSortOptions;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDevice;
    private javax.swing.JLabel lbFilter;
    private javax.swing.JLabel lbSort;
    private javax.swing.JTable tbDeviceList;
    private javax.swing.JTextField tfDeviceName;
    // End of variables declaration//GEN-END:variables
}
